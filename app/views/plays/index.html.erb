<p id="notice"><%= notice %></p>

<h1>Listing Plays</h1>

<!DOCTYPE html>

<head>
  <title>TODO supply a title</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1">
</head>
<body>
<!-- Set up player configuration options -->
<script src="https://cdn.radiantmediatechs.com/rmp/v3/latest/js/rmp.min.js"></script>
<!-- Set up your wrapper div with its unique id -->
<div id="rmpPlayer"></div>

<!-- Set up your wrapper div with its unique id -->
<div id="rmpPlayer"></div>
<!-- Set up player configuration options -->

<!--
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="https://www.gstatic.com/cast/js/receiver/1.0/cast_receiver.js"></script>

<script type="text/javascript">
  var receiver = new cast.receiver.Receiver(
      'C233BCBF', ['other'],
      "",
      5);
  var channelHandler = new cast.receiver.ChannelHandler('other');
  channelHandler.addChannelFactory(receiver.createChannelFactory('other'));

  receiver.start();
  channelHandler.addEventListener(cast.receiver.Channel.EventType.MESSAGE, onMessage.bind(this));
  window.addEventListener('load', function() {
  });

  var lastMessageTime = null;
  function onMessage(event) {
    $('#headline').text(event.message.text);
    lastMessageTime = new Date();
  }

  /* You must call window.close() to exit the receiver app.  This one is on a watchdog.*/
  setInterval(function() {
    if (new Date().getTime() - lastMessageTime.getTime() > 30000) {
      window.close();
    }
  }, 30000);
</script>
-->

<script type="text/javascript"
        src="https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1"></script>

<script>

  initializeCastApi = function() {
    cast.framework.CastContext.getInstance().setOptions({
      receiverApplicationId: 'C233BCBF',
      autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED
    });
  };
  window['__onGCastApiAvailable'] = function(isAvailable) {
    if (isAvailable) {
      initializeCastApi();
    }
  };
</script>


<script>


  // First we specify bitrates to feed to the player
  var bitrates = {
    dash:'https://strm-msknrd.showjet.ru/rc-01/enc/widevine/fhd/hd_audio/06bed790-b3e3-4c52-bf42-c65c76fec766.ism/.mpd?max_bitrate=2500000'
   // dash:'http://demo.unified-streaming.com/video/tears-of-steel/tears-of-steel-multiple-subtitles.ism/.mpd'
    // dash: 'mpd'
  };


  var protectionData = {
    "com.widevine.alpha": {
      "serverURL": "https://irdeto.showjet.ru/widevine/getlicense?ContentId=1366_Endgame_S01_E05_streamcid&CrmId=showjet&AccountId=showjet&SessionId=6873F8B341263598&Ticket=A5152C5C7638C0D4",
    },
    "com.microsoft.playready": {
      "serverURL": "http://drm-playready-licensing.axtest.net/AcquireLicense",
      "httpRequestHeaders": {
        "X-AxDRM-Message": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ2ZXJzaW9uIjoxLCJjb21fa2V5X2lkIjoiNjllNTQwODgtZTllMC00NTMwLThjMWEtMWViNmRjZDBkMTRlIiwibWVzc2FnZSI6eyJ0eXBlIjoiZW50aXRsZW1lbnRfbWVzc2FnZSIsImtleXMiOlt7ImlkIjoiNmU1YTFkMjYtMjc1Ny00N2Q3LTgwNDYtZWFhNWQxZDM0YjVhIn1dfX0.yF7PflOPv9qHnu3ZWJNZ12jgkqTabmwXbDWk_47tLNE"
      }
    }
  };


  // Then we set our player settings
  var settings = {
    licenseKey: 'Kl8lMGJlNHF2NzJvOD9yb201ZGFzaXMzMGRiMEElXyo=',
    bitrates: bitrates,
    delayToFade: 3000,
    width: 640,
    height: 360,
    dashProtectionData: protectionData,
    googleCast: true,
   // googleCastReceiverAppId: 'C233BCBF',
    debug: true,
    streamDebug: true,
    poster: 'https://www.radiantmediaplayer.com/images/poster-rmp-showcase.jpg'
  };
  // Reference to the wrapper div (unique id)
  var element = 'rmpPlayer';
  // Create an object based on RadiantMP constructor
  var rmp = new RadiantMP(element);
  // Initialization ... test your page and done!
  rmp.init(settings);
</script>


<button is="google-cast-button"></button>

</body>


<br>

<%= link_to 'New Play', new_play_path %>

#licenseKey: 'Kl8lMGJlNHF2NzJvOD9yb201ZGFzaXMzMGRiMEElXyo=',

